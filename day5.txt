//program 1
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace kid1
{
    public class program1
    {
        public static void Main()
        {
            int[] arr = new int[10];
            int i;
            Console.Write("\n\n read and print elements of an array:\n");
            Console.Write("--------------------\n");

            Console.Write("enter 10 elements in the array :\n");
            for (i = 0; i < 10; i++)
            {
                Console.Write("element - {0} : ", i);
                arr[i] = Convert.ToInt32(Console.ReadLine());
            }

            Console.Write("\n elements in array are: ");
            for (i = 0; i < 10; i++)
            {
                Console.Write("{0}  ", arr[i]);
            }
            Console.Write("\n");
        }
    }

}

//program 2
 public static void Main()
        {
            int i, n;
            int[] a = new int[100];

            Console.Write("\n\nRead n no of values in an array & display it in reverse order:\n");
            Console.Write("------------------------------------------------------\n");

            Console.Write("enter the number of elements to store in the array :");
            n = Convert.ToInt32(Console.ReadLine());


            Console.Write("enter {0} number of elements in the array :\n", n);
            for (i = 0; i < n; i++)
            {
                Console.Write("element - {0} : ", i);
                a[i] = Convert.ToInt32(Console.ReadLine());
            }

            Console.Write("\n The values store into the array are : \n");
            for (i = 0; i < n; i++)
            {
                Console.Write("{0}  ", a[i]);
            }

            Console.Write("\n The values store into the array in reverse are :\n");
            for (i = n - 1; i >= 0; i--)
            {
                Console.Write("{0} ", a[i]);
            }
            Console.Write("\n\n");
        }

//program 3

 public static void Main()
        {
            int[] a = new int[100];
            int i, n, sum = 0;


            Console.Write("\n\nFind sum of all elements of array:\n");
            Console.Write("--------------------------------------\n");

            Console.Write("enter the number of elements to be stored in the array :");
            n = Convert.ToInt32(Console.ReadLine());

            Console.Write("enter {0} elements in the array :\n", n);
            for (i = 0; i < n; i++)
            {
                Console.Write("element - {0} : ", i);
                a[i] = Convert.ToInt32(Console.ReadLine());
            }

            for (i = 0; i < n; i++)
            {
                sum += a[i];
            }

            Console.Write("Sum of all elements stored in the array is : {0}\n\n", sum);
        }

//program 4
 public static void Main()
        {
            ArrayList myList = new ArrayList(5);

            myList.Add(2);
            myList.Add(4);
            myList.Add(6);
            myList.Add(16);
            myList.Add(20);

            Console.WriteLine("The initial ArrayList: ");

            foreach (int i in myList)
            {
                Console.WriteLine(i);
            }

            myList.RemoveRange(0, 2);

            Console.WriteLine("The ArrayList after Removing elements: ");

            foreach (int i in myList)
            {
                Console.WriteLine(i);
            }
        }

//program 5
static void Main(string[] args)
        {
                int[][] classroom = new int[4][];


                classroom[0] = new int[] { 0,6,7,8 };
                classroom[1] = new int[] { 88,89,90 };
                classroom[2] = new int[] {45, 78 };
                classroom[3] = new int[] { 90,78,99,89 };


                for (int n = 0; n < classroom.Length; n++)
                {


                    System.Console.Write("student({0}): ", n);

                    for (int k = 0; k < classroom[n].Length; k++)
                    {


                        System.Console.Write("{0} ", classroom[n][k]);
                    }
                    System.Console.WriteLine();
                }
            
        }
//program 6
static void Main(string[] args)
        {
            Stack a = new Stack();
            a.Push(1);
            a.Push(2);
            a.Push(3);
            Console.WriteLine("Before pop:");
            foreach (Object obj in a)
            {
                Console.WriteLine(obj);
            }

            Console.WriteLine("Before pop count is " + a.Count);
            a.Pop();
            Console.WriteLine("After pop:");
            foreach (Object obj in a)
            {
                Console.WriteLine(obj);
            }

            Console.WriteLine("Peek  " + a.Peek());
            Console.WriteLine("after pop count is " + a.Count);
            Console.ReadLine();
        }

//program 7
static public void Main()
        {

            Queue queue = new Queue();

            queue.Enqueue("kid");
            queue.Enqueue(1);
            queue.Enqueue(78);
            queue.Enqueue(0);
            queue.Enqueue(12.7);
            queue.Enqueue(66);

            foreach (var ele in queue)
            {
                Console.WriteLine(ele);
            }
            {
                Console.WriteLine("Total elements present in queue: {0}", queue.Count);
                queue.Dequeue();

                Console.WriteLine("no of elements  in queue: {0}", queue.Count);

                Console.WriteLine("no of elements in queue: {0}", queue.Count);
            }
            {
                Console.WriteLine("Topmost element of queue" + " is: {0}", queue.Dequeue());


                Console.WriteLine("no of elements in queue: {0}", queue.Count);


                Console.WriteLine("Topmost element of queue is: {0}", queue.Peek());

                Console.WriteLine("no of elements in queue: {0}", queue.Count);
            }
        }

//program 8
   static void Main(string[] args)
        {
            Hashtable my_hastable = new Hashtable();
            my_hastable.Add("R1", "11");
            my_hastable.Add("R2", "22");
            my_hastable.Add("R3", "33");

            Console.WriteLine("Key and value which are added :");

            foreach (DictionaryEntry ele1 in my_hastable)
            {
                Console.WriteLine("{0} & {1}", ele1.Key, ele1.Value);
            }
            Console.WriteLine(" elements present" + "in my_hastable:{0}", "11,22.33");
            my_hastable.Remove("R3");
            Console.WriteLine(" elements present after remove" + "in my_hastable:{0}", "11,22");
        }

//program 9
 static void Main(string[] args)
        {
            int[] arr1 = new int[10];
            int n, i, j, tmp;
            Console.Write("ente the size of array : ");
            n = Convert.ToInt32(Console.ReadLine());

            Console.Write("enter {0} elements in the array :", n);
            for (i = 0; i < n; i++)
            {
                Console.Write("element - {0} : ", i);
                arr1[i] = Convert.ToInt32(Console.ReadLine());
            }

            for (i = 0; i < n; i++)
            {
                for (j = i + 1; j < n; j++)
                {
                    if (arr1[j] < arr1[i])
                    {
                        tmp = arr1[i];
                        arr1[i] = arr1[j];
                        arr1[j] = tmp;
                    }
                }
            }
            Console.Write("Elements of array in sorted ascending order:");
            for (i = 0; i < n; i++)
            {
                Console.Write("{0} ", arr1[i]);
            }
            Console.Write("");
        }

//program 10
  public static void Main(string[] args)
        {
            Dictionary<int, string> dict = new Dictionary<int, string>();
            dict.Add(1, "Raja");
            dict.Add(2, "Rajan");
            dict.Add(3, "Cholan");
            Console.WriteLine("Values in Dictionary are: \n");
            foreach (KeyValuePair<int, string> item in dict)
            {
                Console.WriteLine(item.Key + "  " + item.Value);

            }
            Console.ReadKey();
        }
    }

//program 11
 public static void Main(string[] args)
        {
            SortedList s = new SortedList();
            s.Add(89, "rajan");
            s.Add(98, "cholan");
            s.Add(42, "raja");
            foreach (DictionaryEntry item in s)
            {
                Console.WriteLine(item.Key + "  " + item.Value);
            }
        }

//program 12
int[] arr = new int[5] { 99, 95, 93, 89, 87 };
            int i, max, min, n;
            n = 5;
            max = arr[0];
            min = arr[0];
            for (i = 1; i < n; i++)
            {
                if (arr[i] > max)
                {
                    max = arr[i];
                }
                if (arr[i] < min)
                {
                    min = arr[i];
                }
            }
            Console.Write("Maximum element = {0}\n", max);
            Console.Write("Minimum element = {0}\n\n", min);
        }
//program 13
static void Main(string[] args)
        {
            int[] array1 = { 1, 3, 5, 200, 22, 2244, 213, 111 };
            var big = from value in array1 where value > 100 select value;
            Console.WriteLine("Numbers that are greater than 100 are  :");
            foreach (var s in big)
            {
                Console.Write(s.ToString() + " ");
            }
            Console.Read();
        }
//program 14
 static int count(int[] S, int m, int n)
            {
                if (n == 0)
                    return 1;


                if (n < 0)
                    return 0;

                if (m <= 0)
                    return 0;


                return count(S, m - 1, n) +
                    count(S, m, n - S[m - 1]);
            }
            public static void Main()
            {
                Console.Write("n = ");
                int n = Convert.ToInt32(Console.ReadLine());
                Console.Write("m = ");
                int m = Convert.ToInt32(Console.ReadLine());
                Console.Write("arr = ");
                int[] arr = new int[n];
                var stringArray = Console.ReadLine().Split(' ');
                for (var i = 0; i < m; i++)
                {
                    arr[i] = int.Parse(stringArray[i]);
                }
                Console.WriteLine("Output = {0}", count(arr, m, n));
                Console.ReadLine();
            }

//program 15
 public static void printFirstRepeating(int[] arr)
        {
            int min = -1;

            HashSet<int> set = new HashSet<int>();
            for (int i = arr.Length - 1; i >= 0; i--)
            {
                if (set.Contains(arr[i]))
                {
                    min = i;
                }

                else 
                {
                    set.Add(arr[i]);
                }

            }

            if (min != -1)
            {
                Console.WriteLine("The first repeating element is " + arr[min]);
            }
            else
            {
                Console.WriteLine("There are no repeating elements");
            }
            Console.ReadLine();

        }

        public static void Main(string[] args)
        {
            int[] arr = new int[] {100, 99, 98, 89, 99,56 };
            printFirstRepeating(arr);
        }
    }